//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18331
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;

public class Player
{
    private int m_money;
    private int m_income;
    private int m_reputation;
    private int m_population;
    private List<TileInstance> m_tileinstances;

    public static List<int> m_RedLines = new List<int>()
    {
        15, 22, 29, 35, 41, 47, 53, 59, 64, 69, 74, 78, 82, 86, 89, 92, 95, 98, 101, 103, 105, 107, 109,
        111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149
    };

    public Player ()
    {
        m_tileinstances = new List<TileInstance>();
        m_money = 15;
        m_income = 0;
        m_reputation = 0;
        m_population = 0;
    }

    public void CleanUp()
    {
        this.m_money += this.m_income;
        this.m_population += this.m_reputation;
    }

    private int clampIncomeReputation (int p_value)
    {
        if (p_value < -5)
            return -5;
        if (p_value > 15)
            return 15;
        return p_value;
    }

    private int clampPopulation (int p_value)
    {
        if (p_value < 0) {
            if (m_money + p_value >= 0)
                m_money += p_value;
            else
                m_money = 0;
            return 0;
        }
        return p_value;
    }

    private int clampMoney (int p_value)
    {
        if (p_value < 0) {
            if (m_population + p_value >= 0)
                m_population += p_value;
            else
                m_population = 0;
            return 0;
        }
        return p_value;
    }

    // public for test purposes
    public static int GetNumberRedLinesBetween(int p_population_old, int p_population_new)
    {
        if (p_population_old == p_population_new)
            return 0;

        int nb_red_lines = 0;
        int sign = Math.Sign(p_population_new - p_population_old);

        if (sign == 1)
        {
            for (int i = p_population_old + 1; i <= p_population_new; i++)
            {
                if (m_RedLines.Contains(i))
                    nb_red_lines++;
            }
        }
        else
        {
            for (int i = p_population_old - 1; i >= p_population_new; i--)
            {
                if (m_RedLines.Contains(i + 1))
                    nb_red_lines--;
            }
        }

        return nb_red_lines;
    }

    private void AdjustReputationIncome(int p_nb_red_lines)
    {
        this.m_income -= p_nb_red_lines;
        this.m_reputation -= p_nb_red_lines;
    }

    public int money {
        get {
            return this.m_money;
        }
        set {
            this.m_money = clampMoney (value);
        }
    }

    public int income {
        get {
            return  this.m_income;
        }
        set {
            this.m_income = clampIncomeReputation (value);
        }
    }

    public int reputation {
        get {
            return this.m_reputation;
        }
        set {
            this.m_reputation = clampIncomeReputation (value);
        }
    }

    public int population {
        get {
            return this.m_population;
        }
        set {
            int old_population = this.m_population;
            this.m_population = clampPopulation (value);
            int nb_red_lines = Player.GetNumberRedLinesBetween(old_population, this.m_population);
            AdjustReputationIncome(nb_red_lines);

            Suburbia.Bus.FireEvent(new EventRedLine(this, nb_red_lines));
        }
    }

    public void AddTileInstance(TileInstance p_tileinstance) {
        this.m_tileinstances.Add(p_tileinstance);
    }

    public List<TileInstance> tiles {
        get {
            return this.m_tileinstances;
        }
    }
}
